generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native"]
}

datasource db {
    provider = "sqlite"
    url      = "file:./database.sqlite"
}

model Events {
    id        String   @id @unique
    createdAt DateTime @default(now())
    active    Boolean  @default(true)
    title     String
    apiKey    String
    ownerId   String?
    owner     User?    @relation(fields: [ownerId], references: [id])
    eventUsers EventUser[]
}

model Order {
    id            String   @id @unique
    createdAt     DateTime @default(now())
    email         String
    phoneNumber   String
    firstName     String
    lastName      String
    photos        String
    storeNumber   String
    promiseTime   String
    confirmed     Boolean  @default(false)
    vendorOrderId String?
}

model Photo {
    id          String   @id @unique
    createdAt   DateTime @default(now())
    fileName    String   @unique
    description String
    lat         Float?
    lon         Float?
    date        BigInt
}

model User {
    id        String   @id @unique @default(cuid())
    email     String   @unique
    createdAt DateTime @default(now())
    verified  Boolean  @default(false)
    role      String
    requests  EventRequest[]
    ownedEvents Events[]
}

model EventRequest {
    id          String   @id @unique @default(cuid())
    title       String
    apiKey      String
    requestedBy String
    user        User     @relation(fields: [requestedBy], references: [id])
    approved    Boolean  @default(false)
    createdAt   DateTime @default(now())
}

model EventUser {
    id        String   @id @unique @default(cuid())
    eventId   String
    event     Events   @relation(fields: [eventId], references: [id])
    userId    String
    role      String
    addedBy   String
    createdAt DateTime @default(now())
}

model ActionLog {
    id        String   @id @unique @default(cuid())
    eventId   String
    userId    String
    action    String
    fileName  String
    createdAt DateTime @default(now())
}

model MagicToken {
    id        String   @id @unique @default(cuid())
    userId    String?
    token     String   @unique
    expiresAt DateTime
    used      Boolean  @default(false)
    createdAt DateTime @default(now())
}
